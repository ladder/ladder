shared_examples 'a File' do
  let(:subject) { Datastream.new }

  shared_context 'with data' do
    let(:from_file) { Datastream.new File.open('./spec/shared/moomin.jpg') }
    let(:from_data) do
      data = ''
      Datastream.new(data: Base64.decode64(data))
    end
  end

  describe 'LADDER_BASE_URI' do
    it 'should automatically have a base URI' do
      expect(subject.rdf_subject.parent).to eq RDF::URI('http://example.org/datastreams/')
    end
  end

  describe '#initialize' do
    include_context 'with data'

    context 'from IO object' do
      it 'should something' do
      end
    end

    context 'from data string' do
      it 'should something' do
      end
    end
  end

  describe '#data' do
  end

  describe '#save' do
  end

  describe '#find' do
  end

  describe '#==' do
  end

end