
- desc = []
- desc.push ISO_639.find(resource[:dcterms][:language].first).english_name.capitalize rescue nil
- desc.push ignore_nil {resource[:dcterms][:issued].first}
- desc.push ignore_nil {resource[:dcterms][:format].first.capitalize}

.description= desc.compact.join('; ')

- agents = ignore_nil {resource[:dcterms][:creator]} || ignore_nil {resource[:dcterms][:contributor]} || ignore_nil {resource[:dcterms][:publisher]} || []
- agents.take(3).each do |value|
  - if value.is_a? Hash
    - heading = value.keys.first.to_s.classify.constantize.find(value.values.first).heading
    = link_to(heading.first, url_for(value.keys.first, :id => value.values.first))

- uris = ignore_nil {resource[:prism][:url]} || ignore_nil {resource[:bibo][:uri]} || ignore_nil {resource[:mods][:locationOfResource]} || []
.clearfix
.pull-left
  - uris.select {|u| u.is_uri?}.take(1).each do |uri|
    %a.btn.btn-success.btn-small{:href => uri, :style => 'margin-top: 10px;'}= I18n.t('accessOnline')
