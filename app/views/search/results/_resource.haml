%a{:href => url_for(:resource, :index, :id => resource.id)}
  %h4= resource.heading.lookup(resource.heading.to_hash).first.truncate(100, :separator => ' ').humanize

- resource = resource.normalize({:ids => :resolve, :localize => true}).to_ostruct_recurse

- desc = []
- desc.push ignore_nil {resource.dcterms.format.first.capitalize}
- desc.push ignore_nil {resource.dcterms.issued.first}
- desc.push ISO_639.find(resource.dcterms.language.first).english_name.capitalize rescue nil

- agents = ignore_nil {resource.dcterms.creator || resource.dcterms.contributor ||resource.dcterms.publisher}
- if agents
  - agents = agents.take(3).map do |value|
    - if value.is_a? Hash
      - heading = value.keys.first.to_s.classify.constantize.find(value.values.first).heading
      - link_to(heading.first, url_for(value.keys.first, :index, :id => value.values.first))
- else agents = []

.description #{[agents + desc].join('; ')}