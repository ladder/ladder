- unless facet.last['terms'].empty?
  - ns = facet.first.split('.').first
  - name = facet.first.split('.').last

  %li.nav-header= 'rdf_types' == name ? 'rdf type' : I18n.t("resource.#{name}", :default => name)

  - facet.last['terms'].each do |f|

    -# 1: Determine what we are going to display
    - if f['term'].match(/^[0-9a-f]{24}$/)
      - heading = @headings.results.find {|i| i.id == f['term']} rescue []

      - if 'dcterms.LCSH' == facet.first or 'dcterms.subject' == facet.first
        -# NB: this requires multiple hits to the DB
        - reference = heading.type.to_s.classify.constantize.find(heading.id)
        - display = [reference.ancestors.map(&:heading) + reference.heading].join(' -- ')
      - elsif 'group' == facet.first
        - display = Group.find(f['term']).rdfs.label.first
      - else
        - display = heading.heading.lookup(heading.heading.to_hash).first.truncate(100, :separator => ' ') rescue ''

    - elsif 'dcterms.language' == facet.first
      - if 'fr' == I18n.locale.to_s then display = ISO_639.find(f['term']).french_name.titleize rescue f['term']
      - else display = ISO_639.find(f['term']).english_name rescue f['term']

    - elsif 'dcterms.format' == facet.first
      - display = f['term'].titleize

    - elsif 'type' == facet.first or 'rdf_types' == facet.first
      - display = partial 'image', :locals => {:type => f['term'].underscore, :style => 'font-size: 1.5em;'}
      - display = display + f['term'].titleize

    - else display = f['term']

    -# 2: Actually display it contextually
    - if @filters[ns].nil? or @filters[ns][name].nil? or !@filters[ns][name].to_a.include?(f['term'])
      - if @filters[ns].nil?
        - @new_fi = @filters.deep_merge({ns.to_s => {name => f['term'].to_a}})
      - else
        - @new_fi = @filters.deep_merge({ns.to_s => {name => @filters[ns][name].to_a | f['term'].to_a}})

      - if @results.total == f['count']
        %li.active.facet
          %a= display
      - else
        %li= link_to display + " (#{f['count']})", current_path('page' => @page, 'fi' => @new_fi)

    - else
      %li.active
        %a{:href => current_path('page' => @page, 'fi' => @filters.deep_merge({ns.to_s => {name => @filters[ns][name].reject { |x| f['term'] == x}}}))}
          #{display}
          .pull-right &times;