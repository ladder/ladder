- @title = @resource.heading.first
- @similar = @resource.similar

.container
  .row
    .span3
      .well.sidebar-nav
        %ul.nav.nav-list

          -# RELATED AGENTS
          - unless @resource.agents.empty?
            %li.nav-header Agents
            =list_of(@resource.agents) do |agent|
              %a{:href => url_for(:agent, :index, :id => agent.id)}
                #{agent.heading.first}

          -# RELATED CONCEPTS
          - unless @resource.concepts.empty?
            %li.nav-header Concepts
            =list_of(@resource.concepts) do |concept|
              = partial 'stem', :locals => {:stem => (Concept.find(concept.parent_ids) + [concept]).reverse!, :model => :concept}
              %li.divider

          -# RELATION TREE
          - unless @resource.parent.nil? and @resource.children.empty?
            %li.nav-header Relations
            = partial 'tree', :collection => @resource.root.to_a, :locals => {:model => :resource, :self_id => @resource.id}

          -# SIMILAR ITEMS
          - unless @similar.empty?
            %li.nav-header Similar

            - # TODO: clean up this code; move to partial
            =list_of(@similar) do |similar|

              - @amatch = @resource.amatch(similar)
              - @amatch[:hamming_similar] = 1-@amatch[:hamming_similar] unless @amatch[:hamming_similar].nil?
              - @diff1 = (@amatch.values.sum / @amatch.size) * 100

              - if @diff1 > 90
                .active
                %a.active{:href => url_for(:resource, :index, :id => similar.id)}
                  #{similar.load.heading.first} (#{@diff1.round}%)
              - else
                %a{:href => url_for(:resource, :index, :id => similar.id)}
                  #{similar.load.heading.first} (#{@diff1.round}%)
    .span9
      %h1.page-header= @title
      = partial 'item', :object => Resource.normalize(@resource.as_document)

      - if @resource.mods
        %pre
          %code{:style => 'background-color: #F4F4F4;'}&= @resource.mods
      -# if @resource.marc
        %pre
          %code= JSON.fast_generate(MARC::Record.new_from_marc(@resource.marc).to_hash, :object_nl => "\n", :indent => " ") if @resource.marc

      %footer &copy; 2012 Deliberate Data
