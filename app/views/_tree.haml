- show = show || :join
- stem = stem || nil

- if reference.id == tree.id
  %li.active
    %a= tree.heading.send(show)
- else
  %li
    %a{:href => url_for(reference.class.to_s.underscore.to_sym, :id => tree.id)}= tree.heading.send(show)

- if stem
  - if (reference.parent_ids + [reference.id]).include? tree.id
    - next_tree = (reference.parent_ids + [reference.id]).reverse.take_while{|id| id != tree.id}.last

    - unless next_tree.nil?
      %ul.nav.nav-list
        = partial 'tree', :collection => reference.class.find(next_tree).to_a, :locals => {:show => show, :reference => reference, :stem => stem}
    - else
      %ul.nav.nav-list
        = partial 'tree', :collection => tree.children.page(1).sort_by {|child| child.heading}, :locals => {:show => show, :reference => reference, :stem => stem}

- elsif tree.children.size > 0
  %ul.nav.nav-list
    = partial 'tree', :collection => tree.children.page(1).sort_by {|child| child.heading}, :locals => {:show => show, :reference => reference}