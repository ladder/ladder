- item = result.normalize({:ids => :resolve})
- desc = []
- desc.push ignore_nil {item.dbpedia.birthName.first}
- desc.push ignore_nil {item.foaf.name.first} unless ignore_nil {item.dbpedia.birthName}

- birth = ignore_nil {item.dbpedia.birthYear.first || item.dbpedia.birthDate.first || item.foaf.birthday.first}
- birth = Date.parse(birth).year.to_s
- death = ignore_nil {item.dbpedia.deathYear.first || item.dbpedia.deathDate.first}
- death = Date.parse(death).year.to_s
- desc.push "#{birth}-#{death}" unless birth.empty?

- if item[:foaf][:name] and !item[:foaf][:name].drop(1).empty?
  - desc.push item[:foaf][:name].drop(1).dashjoin

- if result.resource_ids.size > 3
  - desc.push "#{result.resource_ids.size} #{I18n.t('search.resources')}" rescue nil

.span8
  %a{:href => url_for(:agent, :index, :id => result.id)}
    %h4= result.heading.first.truncate(100, :separator => ' ').humanize
  .description #{desc.join('; ')}

.span4
  .together
    - Resource.find(result.resource_ids.take(3)).each do |resource|
      %a.thumbnail.pull-right{:href => url_for(:resource, :index, :id => resource.id), :style => 'margin-left: 9px;'}
        .half-small
          = partial 'image', :object => resource