%table.table.table-bordered.table-striped.table-condensed
  - doc = item.class.normalize(item.as_document, {:ids => :resolve})
  - doc.each do |vocab, fields|
    - next if fields.empty?

    -#%tr
      %th{:colspan => 2, :style => 'text-transform: uppercase; background: #c8e4f8;'}= vocab

    - fields.each do |name, values|
      %tr
        %td.span2
          %strong{:style => 'text-transform: capitalize;'}= I18n.t("#{item.class.to_s.underscore}.#{name}")
        %td.span10
          - values.each do |value|

            - if value.is_a? Hash
              - heading = value.keys.first.to_s.classify.constantize.find(value.values.first).heading

              - if value[:concept]
                #{link_to heading.dashjoin, url_for(value.keys.first, :index, :id => value.values.first)}
              - else
                #{link_to heading.first.truncate(100, :separator => ' '), url_for(value.keys.first, :index, :id => value.values.first)}

            - elsif :language == name
              = ISO_639.find(value).english_name

            - else
              = value

            - unless values.last == value
              %br