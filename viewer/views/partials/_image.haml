-# TODO: refactor me into a helper!
- image = image

- if image.nil?
- elsif image.rdf_types.is_a? Hash then rdf_types = image.rdf_types.values.flatten
- elsif image.rdf_types.is_a? Tire::Results::Item then rdf_types = image.rdf_types.to_hash.values.flatten
- else rdf_types = image.rdf_types

- class_rdf_types = image.class.rdf_types.values.flatten rescue []
- type = [type] + [rdf_types] + class_rdf_types
- type = type.uniq.join(' ').strip rescue type

- style = style || nil

- icon_class = case type.to_s
  - when /musical/i then 'icon-music'
  - when /athlete/i then 'icon-trophy'
  - when /office/i then 'icon-briefcase'
  - when /writer/i then 'icon-pencil'
  - when /scientist/i then 'icon-beaker'
  - when /politician/i then 'icon-bullhorn'
  - when /artist/i then 'icon-picture'
  - when /person/i then 'icon-user'
  - when /organi[sz]ation/i then 'icon-group'
  - when /corporate/i then 'icon-group'
  - when /agent/i then 'icon-user-md'

  - when /film/i then 'icon-film'
  - when /book/i then 'icon-book'
  - when /software/i then 'icon-save'
  - when /map/i then 'icon-globe'
  - when /periodical/i then 'icon-copy'
  - when /music/i then 'icon-music'
  - when /(audio)?visual/i then 'icon-facetime-video'
  - when /audio/i then 'icon-volume-up'
  - when /resource/i then 'icon-file'

  - when /country/i then 'icon-flag'
  - when /populated/i then 'icon-road'
  - when /settlement/i then 'icon-home'
  - when /protected/i then 'icon-leaf'
  - when /place/i then 'icon-map-marker'
  - when /concept/i then 'icon-cloud'

  - else 'icon-question-sign'

- if url = ignore_nil { image[:dbpedia][:thumbnail].first }
  %img{:src => url, :onError => "imgFallback(this, '#{icon_class}', '#{style}');"}

- else
  %i{:class => icon_class, :style => style}